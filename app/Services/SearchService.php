<?php
/**
 * Created by PhpStorm.
 * User: vlad_
 * Date: 16.08.2017
 * Time: 17:04
 */

namespace App\Services;

use App\Repositories\CategoryRepository;
use App\Repositories\ProductRepository;

/**
 * Class SearchService
 * @package App\Services
 */
class SearchService extends LayoutService
{
    /**
     * SearchService constructor.
     * @param CategoryRepository $categoryRepository
     * @param ProductRepository $productRepository
     */
    public function __construct(CategoryRepository $categoryRepository, ProductRepository $productRepository)
    {
        parent::__construct($categoryRepository, $productRepository);
    }

    /**
     * @param $model
     */
    public function fill($model)
    {
        parent::fill($model); // TODO: Change the autogenerated stub
        
        $this->fillSearchProducts($model);

        $this->fillCountSearchProducts($model);
        
        $this->fillSearchTopSalesProducts($model);
        
        $this->fillSearchNoveltyProducts($model);

        $this->fillMeta($model);
    }

    /**
     * @param $model
     */
    public function fillAsync($model)
    {
        $this->fillAsyncSearchProducts($model);
        $this->fillCountSearchProducts($model);
    }

    /**
     * @param $model
     */
    private function fillAsyncSearchProducts($model)
    {
        $model->searchProducts = $this->productRepository->getAsyncSearchProducts($model->series, $model->language);
    }

    /**
     * @param $model
     */
    private function fillSearchProducts($model)
    {
        $model->searchProducts = $this->productRepository->getSearchProducts($model->series, $model->sort, $model->searchProductsLimit, $model->searchProductsOffset, $model->language);
    }

    /**
     * @param $model
     */
    private function fillCountSearchProducts($model)
    {
        $model->countSearchProducts = $this->productRepository->getCountSearchProducts($model->series);
    }
    
    /**
     * @param $model
     */
    private function fillSearchTopSalesProducts($model)
    {
        $model->searchTopSalesProducts = $this->productRepository->getTopSalesProductsByLanguage($model->language);
    }

    /**
     * @param $model
     */
    private function fillSearchNoveltyProducts($model)
    {
        $model->searchNoveltyProducts = $this->productRepository->getNoveltyProductsByLanguage($model->language);
    }

    /**
     * fill meta tags
     * @param $model
     */
    private function fillMeta($model)
    {
        $model->title = trans('meta.search_page_title') . " \"" . $model->seriesTitle . "\" | " . trans('meta.home_page_title');
    }
}